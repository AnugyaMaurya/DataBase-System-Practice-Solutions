#Q1From the following table, write a SQL query to find those rows where col1 contains the string ( _/ ). Return col1.

#Sample table: testtable
col1
--------------------------
A001/DJ-402\44_/100/2015
A001_\DJ-402\44_/100/2015
A001_DJ-402-2014-2015
A002_DJ-401-2014-2015
A001/DJ_401
A001/DJ_402\44
A001/DJ_402\44\2015
A001/DJ-402%45\2015/200
A001/DJ_402\45\2015%100
A001/DJ_402%45\2015/300
A001/DJ-402\44

A1: SELECT *
FROM testtable
WHERE col1 LIKE '%/_//%' ESCAPE '/';

Q2  write a SQL query to locate all customers with a grade value.
SELECT *
FROM customer
WHERE grade IS NOT NULL;

Q3 write a SQL query to calculate total purchase amount of all orders. Return total purchase amount.
SELECT SUM (purch_amt) 
FROM orders;

Q4 write a SQL query that counts the number of unique salespeople. Return number of salespeople.
SELECT COUNT (DISTINCT salesman_id) 
FROM orders;

Q5 write a SQL query to find the highest purchase amount ordered by each customer. Return customer ID, maximum purchase amount.
SELECT customer_id,MAX(purch_amt) 
FROM orders 
GROUP BY customer_id;

Q6  write a SQL query to determine the highest purchase amount made by each salesperson on '2012-08-17'. Return salesperson ID, purchase amount.
SELECT salesman_id,MAX(purch_amt) 
FROM orders 
WHERE ord_date = '2012-08-17' 
GROUP BY salesman_id;

Q7  write a SQL query to find the maximum order (purchase) amount based on the combination of each customer and order date. Filter the rows for maximum order (purchase) amount is either 2000, 3000, 5760, 6000. Return customer id, order date and maximum purchase amount.
SELECT customer_id,ord_date,MAX(purch_amt) 
FROM orders 
GROUP BY customer_id,ord_date 
HAVING MAX(purch_amt) IN(2000 ,3000,5760, 6000);

Q8 write a SQL query to find those employees whose first name does not contain the letter ‘M’. Sort the result-set in ascending order by department ID. Return full name (first and last name together), hire_date, salary and department_id.
SELECT first_name || ' ' || last_name as Full_Name, hire_date,  
 salary,  department_id
  FROM employees
   WHERE first_name NOT LIKE '%M%'
     ORDER BY department_id;
     
Q9  write a SQL query to find the employees who were hired before June 21st, 2002. Return all fields.
SELECT *
 FROM employees
  WHERE hire_date < '2002-06-21';
  
 Q10  write a SQL query to find employees whose first names contain the letters D, S, or N. Sort the result-set in descending order by salary. Return all fields.
 SELECT *
 FROM employees
  WHERE first_name LIKE '%D%'
   OR first_name LIKE '%S%'
   OR first_name LIKE '%N%'
    ORDER BY salary DESC;
    
  Q11  write a SQL query to find the departments where any manager manages four or more employees. Return department_id
  SELECT DISTINCT department_id
	FROM employees
		GROUP BY department_id, manager_id 
			HAVING COUNT(employee_id) >=4;
      
 Q12  write a SQL query to find those employees who have completed their previous jobs. Return employee ID, end_date.    
  SELECT employee_id , MAX(end_date)
FROM job_history
WHERE employee_id IN (SELECT employee_id
FROM job_history
GROUP BY 1
HAVING COUNT(employee_id) > 1)
GROUP BY 1

